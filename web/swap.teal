#pragma version 6
int 0
store 0
txn NumAppArgs
int 0
==
bnz main_l7
txna ApplicationArgs 0
byte "transfer"
==
bnz main_l6
byte "arg found is: "
txna ApplicationArgs 0
concat
log
txna ApplicationArgs 0
byte "opt_in"
==
bnz main_l5
txna ApplicationArgs 0
byte "swap"
==
bz main_l8
int 1
callsub checkassets_5
callsub checktransfers_2
store 0
load 0
callsub completeswap_3
int 1
return
main_l5:
int 0
callsub checkassets_5
callsub optins_4
int 1
return
main_l6:
txna ApplicationArgs 1
btoi
callsub transfer_6
int 1
return
main_l7:
callsub checkOwner_7
return
main_l8:
byte "Did not match method."
log
int 10
return

// get_asset
getasset_0:
store 4
load 4
int 0
==
bnz getasset_0_l5
load 4
int 1
==
bnz getasset_0_l4
load 4
int 2
==
bz getasset_0_l6
int TMPL_ASSET3
retsub
getasset_0_l4:
int TMPL_ASSET2
retsub
getasset_0_l5:
int TMPL_ASSET1
retsub
getasset_0_l6:
int 0
retsub

// check_amount
checkamount_1:
store 6
store 5
load 6
store 7
load 6
int 0
==
bz checkamount_1_l2
load 5
store 7
checkamount_1_l2:
load 5
int 0
>
assert
load 7
load 5
==
assert
load 7
retsub

// check_transfers
checktransfers_2:
int 0
store 3
int 0
store 2
int 0
store 1
checktransfers_2_l1:
load 3
global GroupSize
<
load 2
int TMPL_NUM_ASSETS
<
&&
bz checktransfers_2_l5
load 3
gtxns XferAsset
load 3
callsub getasset_0
==
load 3
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
bnz checktransfers_2_l4
checktransfers_2_l3:
load 3
int 1
+
store 3
b checktransfers_2_l1
checktransfers_2_l4:
load 3
gtxns AssetAmount
load 1
callsub checkamount_1
store 1
load 2
int 1
+
store 2
b checktransfers_2_l3
checktransfers_2_l5:
load 2
int TMPL_NUM_ASSETS
==
assert
load 2
retsub

// complete_swap
completeswap_3:
store 8
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
txn Sender
itxn_field AssetReceiver
load 8
itxn_field AssetAmount
itxn_submit
retsub

// opt_ins
optins_4:
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field Sender
int 0
itxn_field AssetAmount
itxn_submit
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 1
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field Sender
int 0
itxn_field AssetAmount
itxn_submit
int TMPL_NUM_ASSETS
int 1
>
bnz optins_4_l3
optins_4_l1:
int TMPL_NUM_ASSETS
int 2
>
bz optins_4_l4
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 3
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field Sender
int 0
itxn_field AssetAmount
itxn_submit
b optins_4_l4
optins_4_l3:
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 2
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field Sender
int 0
itxn_field AssetAmount
itxn_submit
b optins_4_l1
optins_4_l4:
retsub

// check_assets
checkassets_5:
store 9
txna Assets 0
int TMPL_REDEEM_ASSET
==
assert
load 9
int 0
==
bz checkassets_5_l5
txna Assets 1
int TMPL_ASSET1
==
assert
int TMPL_NUM_ASSETS
int 1
>
bnz checkassets_5_l4
checkassets_5_l2:
int TMPL_NUM_ASSETS
int 2
>
bz checkassets_5_l5
txna Assets 3
int TMPL_ASSET3
==
assert
b checkassets_5_l5
checkassets_5_l4:
txna Assets 2
int TMPL_ASSET2
==
assert
b checkassets_5_l2
checkassets_5_l5:
retsub

// transfer
transfer_6:
store 10
byte "Checking owner"
log
callsub checkOwner_7
int 1
!=
bnz transfer_6_l2
byte "Would try to transfer"
log
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
txn Sender
itxn_field AssetReceiver
load 10
itxn_field AssetAmount
itxn_submit
b transfer_6_l3
transfer_6_l2:
byte "sender is not owner"
log
int 0
return
transfer_6_l3:
retsub

// checkOwner
checkOwner_7:
txn Sender
addr TMPL_OWNER
!=
bnz checkOwner_7_l2
int 1
retsub
checkOwner_7_l2:
int 0
retsub
